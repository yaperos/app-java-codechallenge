version: '3.8'
services:
  mongodb:
    image: mongo:4.4
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - challenge-network

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - challenge-network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - challenge-network


  transaction-service:
    build:
      context: ./transaction-service
    container_name: transaction-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/transactions
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - mongodb
      - kafka
    networks:
      - challenge-network

  antifraud-service:
    build:
      context: ./antifraud-service
    container_name: antifraud-service
    ports:
      - "8000:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

    depends_on:
      - mongodb
      - kafka
    networks:
      - challenge-network

volumes:
  mongo-data:
networks:
  challenge-network: