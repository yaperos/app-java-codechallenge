version: "3.7"
services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: [ "postgres", "-c", "wal_level=logical", "-c", "max_wal_senders=1" , "-c", "max_replication_slots=1" ]
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,EXTERNALPLAINTEXT://:29092
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "9092:9092"
      - "29092:29092"

  debezium:
    container_name: debezium
    image: debezium/connect
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my-connect-configs
      OFFSET_STORAGE_TOPIC: my-connect-offsets
      BOOTSTRAP_SERVERS: kafka:9092
      ADVERTISED_HOST_NAME: debezium
    ports:
      - "8083:8083"
    depends_on:
      - kafka

  redis:
    container_name: redis
    image: redis:7.0.5-alpine
    ports:
      - "6379:6379"
    command: [ "redis-server", "--requirepass", "REDISPSWD" ]
