version: "3.7"

volumes:
  mysql-data-busness:
    driver: local      
networks:
  mysql-networks-busness:
    driver: bridge

services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - mysql-networks-busness
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - mysql-networks-busness
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092
    networks:
      - mysql-networks-busness
  db:
    build: .
    image: mysql:8.2.0
    #Solo para algunas imagenes y arquitecturas especificas de procesador (MacOs - M2)
    platform: linux/amd64
    container_name: mysql-busness-challenge
    restart: always
    ports:
       - "33061:3306"
    volumes:
      - mysql-data-busness:/var/lib/mysql:delegated
    environment:
      - MYSQL_DATABASE=core_challenge
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - mysql-networks-busness
  myapp-challenge:
    build:
      context: .
      dockerfile: ./codechallenge/DockerFile
    container_name: myapp-challenge
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: always
    ports:
      - "8092:8092"
    image: myapp-challenge:v1.0.0
    networks:
      - mysql-networks-busness
    depends_on:
      - db
      - kafka